# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "thunderbolt" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/381af333-0d0c-4488-a1c9-86f4eafba04f";
      fsType = "btrfs";
      options = [ "subvol=root" "noatime" ];
    };

  boot.initrd.luks.devices."cryptroot" = {
    device = "/dev/disk/by-uuid/96e562f7-0a67-49c9-bc9c-8cf82f765452";
    allowDiscards = false;
    preLVM = true;
  };

  fileSystems."/home" =
    { device = "/dev/disk/by-uuid/381af333-0d0c-4488-a1c9-86f4eafba04f";
      fsType = "btrfs";
      options = [ "subvol=home" "noatime" ];
    };

  fileSystems."/nix" =
    { device = "/dev/disk/by-uuid/381af333-0d0c-4488-a1c9-86f4eafba04f";
      fsType = "btrfs";
      options = [ "subvol=nix" "noatime" ];
    };

  fileSystems."/btrfs" =
    { device = "/dev/disk/by-uuid/381af333-0d0c-4488-a1c9-86f4eafba04f";
      fsType = "btrfs";
      options = [ "noatime" ];
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/9396-DEBC";
      fsType = "vfat";
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp1s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
